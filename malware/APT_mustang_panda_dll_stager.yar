import "pe"

rule mustang_panda_stager_dll
{
	meta:
		version = "1.0"
		first_imported = "2023-10-03"
		last_modified = "2023-10-03"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual Investigation"
		author = "TTC-CERT"
		description = "Detect DLL Stager (32-bit) Employed by Mustang Panda in Targeted Campaigns Against Myanmar"
		hash = "fb6f64e1cce67071aade373f8b7cc5a1e88effcf9b73098f9821e1a265a10eb6"
	
	strings:
		// A portion from instructions used for anti-debugging by employing WTSQuerySessionInformationW().
		$func_1 = 
			{
				F2 0F 5E 05 [4]			// divsd   xmm0, ds:qword_XXXXXXXX
				B8 01 [0-3]			// mov     eax, 1
				0F B6 DB			// movzx   ebx, bl
				56				// push    esi
				F2 0F 10 8D [4]		// movsd   xmm1, [ebp+var_XXX]
				F2 0F 5C C8			// subsd   xmm1, xmm0
				66 0F 2F 0D [4]		// comisd  xmm1, ds:qword_XXXXXXXX
				0F 43 D8			// cmovnb  ebx, eax
			}
		// Loop manipulating data from CoCreateGUID() result.
		$func_2 = 
			{
				69 86 FC 01 00 00 [4]		// imul    eax, [esi+1FCh], XXXXh
				05 [4]				// add     eax, XXXXh
				89 86 FC 01 [2]		// mov     [esi+1FCh], eax
				88 84 [5]			// mov     [esi+ecx+XXXh], al
				41				// inc     ecx
				(83 | 81) F9 (?? | ?? ?? ?? ??)	// cmp     ecx, XXXh
				7? D?				// Condition Jump Loop
			}
		// A portion from XOR operation.
		$func_3 = 
			{
				8D 04 3A			// lea     eax, [edx+edi]
				0F B6 C0			// movzx   eax, al
				0F B6 84 30 [4]		// movzx   eax, byte ptr [eax+esi+0C8h]
				30 07				// xor     [edi], al
			}
		// Stackstring operation with IMUL or SHL instruction.
		$func_4 =
			{
				33 C0				// xor     eax, eax
				40				// inc     eax
				( 6B C0 ?? | C1 E0 ?? )		// (imul OR shl)    eax, XX
				C6 44 ?? ?? ??			// mov     [ebp+r32+var_XX], XXh
			}
	
	condition:
		pe.characteristics & pe.DLL
		and any of them
}