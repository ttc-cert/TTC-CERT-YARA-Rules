import "pe"

rule bangkokshell_pe_sideload : T1574_002
{
	meta:
		version = "1.0"
		first_imported = "2023-05-20"
		last_modified = "2023-05-20"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect legitimate PE file which was compiled from libimobiledevice project on Github and signed by Foneazy Technology. It will be using in DLL side-loading technique so be caution when found suspicious DLL in the same folder with this file"
		hash = "19e48527fc761dbf6f5f894fe6fe41547c0e7309a9bdf5707359dab8091db573"
		
	condition:
		pe.is_pe
		and pe.signatures[0].subject contains "Foneazy Technology Co., Limited"
		and (pe.imports("imobiledevice.dll") or pe.imports("getopt.dll"))
}

rule bangkokshell_dll_loader : T1574_002
{
	meta:
		version = "1.0"
		first_imported = "2023-05-20"
		last_modified = "2023-05-20"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detecting DLLs used in DLL side-loading technique. The identified file serves as a Loader Trojan, responsible for loading and mapping a shellcode file into memory at runtime."
		hash = "87b48238f429b2379f29af9e585cf33fc8ce130d7c9504e7190b053727748d6f"
	
	strings:
		$dll_name1 = "getopt.dll"
		$dll_name2 = "imobiledevice.dll"
		$str1 = "license" //Shellcode's filename which will be loaded. It is possible that TA will change the shellcode filename, so don't solely rely on this string.
		$str2 = "getopt_a"
		$str3 = "getopt_long_a"
		$str4 = "getopt_long_only_a"
		$str5 = "idevice_connect"
		$str6 = "idevice_connection_disable_bypass_ssl"
		$str7 = "idevice_connection_disable_ssl"
		$exec_shell = 
		{
			85 C0			// test    eax, eax
			74 0A			// jz      short loc_100010BE
			39 B5 [4]			// cmp     [ebp+NumberOfBytesRead], esi
			75 02			// jnz     short loc_100010BE
			FF D7			// call    edi
			68 00 80 00 00	// push    8000h           ; dwFreeType
			56				// push    esi             ; dwSize
			57				// push    edi             ; lpAddress
		}
		
	condition:
		pe.characteristics & pe.DLL
		and (($dll_name1 and not $dll_name2) or ($dll_name2 and not $dll_name1))
		and 2 of ($str*)
		and $exec_shell
}

rule bangkokshell_shellcode : T1620
{
	meta:
		version = "1.0"
		first_imported = "2023-05-22"
		last_modified = "2023-05-22"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the shellcode used by BangkokShell for the purpose of deobfuscating the payload (DLL) and executing  it reflectively within the memory space. The shellcode in question is a modified version of DllToShellCode derived from a GitHub project"
		hash = "0f7ea24d5d2758bc9c53dc6f408322ccd998cac3ffc54e51d19c47a16a76d96e"
		
	strings:
		$xor_op = 
			{
				8B C1		// mov	eax, ecx
				99			// cdq
				F7 FB		// idiv	ebx
				8A 44 32 08	// mov	al, [edx+esi+8]
				30 04 39		// xor	[ecx+edi], al
				41			// inc		ecx
				3B 4D FC		// cmp	ecx, [ebp-4]
				7C ??		// jl		short loc_??
				8B 45 F8		// mov	eax, [ebp-8]
				50			// push	eax
				FF D7		// call	edi
			}
		$va_calc =
			// This code is probably a modified version of DllToShellCode 
			{
				83 65 FC 00		// and	[ebp+var_4], 0
				E8 00 00 00 00	// call	$+5
				58				// pop	eax
				2D [4]			// sub	eax, imm32
				89 45 FC			// mov	[ebp+var_4], eax
				8B 45 FC			// mov	eax, [ebp+var_4]
			}
	
	condition:
		all of them
}

rule bangkokshell_payload_rahadrat
{
	meta:
		version = "1.1"
		first_imported = "2023-06-15"
		last_modified = "2023-06-15"
		status = "RELEASED"
		sharing = "TLP:GREEN"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect payload used by BangkokShell. This is a fileless payload, it will be reflectively loaded into memory by the shellcode"
		hash = "955060f97279bbacc1bc7120700b4a73ea6ef3be3781a993023e99993bedc7f5"
		
	strings:
		$func1 =
			{
				6A 4E			// push    4Eh
				58				// pop     eax
				6A 6F			// push    6Fh
				66 89 06			// mov     [esi], ax
				58				// pop     eax
				6A 6E			// push    6Eh
				66 89 46 02		// mov     [esi+2], ax
				58				// pop     eax
				66 89 46 04		// mov     [esi+4], ax
				6A 65			// push    65h
				58				// pop     eax
				66 89 46 06		// mov     [esi+6], ax
				33 C0			// xor     eax, eax
				66 89 46 08		// mov     [esi+8], ax
			}
		$xFx0_block =
			{
				8B F8			// mov     edi, eax
				6B C3 1C			// imul    eax, ebx, 1Ch
				89 1F			// mov     [edi], ebx
				89 45 08			// mov     [ebp+arg_0], eax
				83 7C 30 2C FF	// cmp     dword ptr [eax+esi+2Ch], 0FFFFFFFFh
			}
		$xFx0_WritePipe =
			{
				66 C7 04 37 0D 0A	// mov     word ptr [edi+esi], 0A0Dh
				8D 45 F8			// lea     eax, [ebp+var_8]
				83 C6 02			// add     esi, 2
				6A 00			// push    0
				50				// push    eax
				56				// push    esi
				C6 04 37 00		// mov     byte ptr [edi+esi], 0
				8B 03			// mov     eax, [ebx]
				8B 5D 08			// mov     ebx, [ebp+arg_0]
				83 C0 02			// add     eax, 2
				6B C0 1C			// imul    eax, 1Ch
				57				// push    edi
				FF 34 18			// push    dword ptr [eax+ebx]
			}
		$xFx0_PeekPipe = 
			{
				6B 0E 1C		// imul    ecx, [esi], 1Ch
				8B 46 04		// mov     eax, [esi+4]
				89 55 08		// mov     [ebp+arg_0], edx
				39 54 01 44	// cmp     [ecx+eax+44h], edx
				0F 85 [4]		// jnz     loc_????????
				85 FF		// test    edi, edi
				0F 84 [4]		// jz      loc_????????
				52			// push    edx
				8D 55 08		// lea     edx, [ebp+arg_0]
				52			// push    edx
				33 D2		// xor     edx, edx
				52			// push    edx
				52			// push    edx
				52			// push    edx
				FF 74 01 30	// push    dword ptr [ecx+eax+30h]
			}
	
	condition:
		any of them
}

rule bangkokshell_imobiledevice_dll
{
	meta:
		version = "1.0"
		first_imported = "2023-06-15"
		last_modified = "2023-06-15"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect imobiledevice.dll, which is the loaded module for the main PE used in this operation. This file, by itself, is not malicious but is also not a benign file. It should be considered an indicator of an attack if it has been discovered in the environment."
		hash = "cb0a22c4ee2610692c4ec4aee1c9693829bb82aebe2a260e0a100f354e5ea1e0 "
	
	strings: 
		$dll_name = "imobiledevice.dll"
		$exp_func1 = "afc_client_free"
		$exp_func2 = "debugserver_decode_string"
		$exp_func3 = "idevice_disconnect"
		$exp_func4 = "lockdownd_activate"
		$exp_func5 = "mobilesync_anchors_new"
	
	condition:
		pe.is_dll()
		and filesize < 100KB
		and pe.imphash() == "fd3a5d0640b4ad18cc4154ffa40d7b34"
		and pe.number_of_signatures == 0
		and ($dll_name and 2 of ($exp_func*))
}
