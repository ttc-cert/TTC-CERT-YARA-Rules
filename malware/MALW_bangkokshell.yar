/*
===================================================================
  ATTENTION: REQUEST FOR DETAILED YARA RULE
===================================================================

If you require a more detailed version of this YARA rule, including comprehensive comments and explanations, please follow the steps below:

1. Send an email from your corporate email address to TTC-CERT at: report@ttc-cert.or.th

2. In the email subject, please mention "Request for Detailed YARA Rule."

3. Include the name or URL of the YARA rule from TTC-CERT's GitHub repository and provide a brief explanation of why you need the detailed version, and any specific context or use case you may have.

Our team will review your request and get back to you as soon as possible with the requested information.

Thank you for your interest in our YARA rule, and we appreciate your understanding of our process to ensure security and compliance.

===================================================================
*/

import "pe"

rule bangkokshell_pe_sideload : T1574_002
{
	meta:
		version = "1.0"
		first_imported = "2023-05-20"
		last_modified = "2023-05-20"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect legitimate PE file which was compiled from libimobiledevice project on Github and signed by Foneazy Technology. It will be using in DLL side-loading technique so be caution when found suspicious DLL in the same folder with this file"
		hash = "19e48527fc761dbf6f5f894fe6fe41547c0e7309a9bdf5707359dab8091db573"
		
	condition:
		pe.is_pe
		and pe.signatures[0].subject contains "Foneazy Technology Co., Limited"
		and (pe.imports("imobiledevice.dll") or pe.imports("getopt.dll"))
}

rule bangkokshell_dll_loader_v1 : T1574_002
{
	meta:
		version = "1.1"
		first_imported = "2023-05-20"
		last_modified = "2023-10-23"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detecting DLLs used in DLL side-loading technique. The identified file serves as a Loader Trojan, responsible for loading and mapping a shellcode file into memory at runtime."
		hash = "87b48238f429b2379f29af9e585cf33fc8ce130d7c9504e7190b053727748d6f"
	
	strings:
		$dll_name1 = "getopt.dll"
		$dll_name2 = "imobiledevice.dll"
		$str1 = "license" //Shellcode's filename which will be loaded. It is possible that TA will change the shellcode filename, so don't solely rely on this string.
		$str2 = "getopt_a"
		$str3 = "getopt_long_a"
		$str4 = "getopt_long_only_a"
		$str5 = "idevice_connect"
		$str6 = "idevice_connection_disable_bypass_ssl"
		$str7 = "idevice_connection_disable_ssl"
		$hex = { 85 C0 74 0A 39 B5 [4] 75 02 FF D7 68 00 80 00 00 56 57 }
		
	condition:
		pe.characteristics & pe.DLL
		and (($dll_name1 and not $dll_name2) or ($dll_name2 and not $dll_name1))
		and 2 of ($str*)
		and $hex
}

rule bangkokshell_dll_loader_v2
{
	meta:
		version = "1.0"
		first_imported = "2023-10-12"
		last_modified = "2023-10-12"
		status = "RELEASED"
		sharing = "TLP:GREEN"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the DLL Loader used in BangkokShell operation. The Loader will load the payload, deobfuscate and execute it in memory."
		hash = "775656cb7af4f6718e0454efcf4b70576748f32780f8eb95f2faf108141d40c6"
		
	strings:
		$hex1 = { (8D 04 ?? | 8B (44 24 ?? | 45 ??) 03 C1) 99 F7 (7C 24 ?? | 7D ??) 0F B6 44 (14 | 15) ?? 30 (01 | 41 0?) }
		$hex2 = { B8 [4] 8B CE F7 E6 8B C6 2B C2 (D1 E8 | C1 E8 ??) 03 C2 (C1 E8 ?? | D1 E8) 69 C0 [4] 2B C8 8A 44 (0C | 0D) ?? 30 04 1E 46 3B F7 72 }
		$func2 = { 8B 45 0C 8D 79 04 8B 55 08 89 41 0C B8 57 00 00 00 89 31 89 51 10 85 FF 74 ?? 83 FA 40 }
		$func2_1 = { 8A 4C 02 FF 8D 40 FF 88 08 4E 75 F4 5E 5D }
		$func2_2 = { C7 40 08 00 00 00 00 C7 00 00 00 00 00 C7 45 ?? 00 00 00 00 }
		$func3_1 = { 8B 16 8B 43 24 8B 4B 20 03 C2 03 CA 89 55 FC 89 45 F4 89 4D F8 F7 C7 00 00 (FF FF | 00 00) 75 }
		$func3_2 = { 83 78 04 00 74 (0? | 1?) 8B 08 85 C9 74 (0? | 1?) 8B 06 03 C1 5E }
		$func3_3 = { 56 8B F1 8B 46 08 85 C0 74 ?? 83 C0 78 74 ?? F6 46 0C 01 74 ?? }
	
	condition:
		pe.characteristics & pe.DLL
		and (any of ($hex*)
		or ($func2 and any of ($func2_*))
		or 2 of ($func3_*))
}

rule bangkokshell_shellcode : T1620
{
	meta:
		version = "1.0"
		first_imported = "2023-05-22"
		last_modified = "2023-05-22"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the shellcode used by BangkokShell for the purpose of deobfuscating the payload (DLL) and executing  it reflectively within the memory space. The shellcode in question is a modified version of DllToShellCode derived from a GitHub project"
		hash = "0f7ea24d5d2758bc9c53dc6f408322ccd998cac3ffc54e51d19c47a16a76d96e"
		
	strings:
		$hex1 = { 8B C1 99 F7 FB 8A 44 32 08 30 04 39 41 3B 4D FC 7C ?? 8B 45 F8 50 FF D7 }
		$hex2 = { 83 65 FC 00 E8 00 00 00 00 58 2D [4] 89 45 FC 8B 45 FC }
	
	condition:
		all of them
}

rule bangkokshell_rahadrat
{
	meta:
		version = "2.0"
		first_imported = "2023-06-15"
		last_modified = "2023-10-23"
		status = "RELEASED"
		sharing = "TLP:GREEN"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect RahadRAT, a Remote Access Trojan used in BangkokShell operation. This is a fileless DLL payload, it will be reflectively loaded into memory by the shellcode or Loader"
		hash = "955060f97279bbacc1bc7120700b4a73ea6ef3be3781a993023e99993bedc7f5"
		
	strings:
		$hex1 = { 6A 4E 58 6A 6F 66 89 06 58 6A 6E 66 89 46 02 58 66 89 46 04 6A 65 58 66 89 46 06 33 C0 66 89 46 08 }
		$hex2 = { 8B F8 6B C3 1C 89 1F 89 45 08 83 7C 30 2C FF }
		$hex3 = { 66 C7 04 37 0D 0A 8D 45 F8 83 C6 02 6A 00 50 56 C6 04 37 00 8B 03 8B 5D 08 83 C0 02 6B C0 1C 57 FF 34 18 }
		$hex4  = { 6B 0E 1C 8B 46 04 89 55 08 39 54 01 44 0F 85 [4] 85 FF 0F 84 [4] 52 8D 55 08 52 33 D2 52 52 52 FF 74 01 30 }
		$hex5 = { 83 EC 44 83 65 F8 00 33 C0 53 56 57 89 4D DC 89 45 F4 50 64 A1 30 00 00 00 8B 40 0C 8B 40 1C 8B 00 8B 40 08 89 45 E4 58 8B 5D E4 8B 43 3C 8B 44 18 78 03 C3 8B 48 1C 8B 50 20 03 CB 89 4D EC 03 D3 8B 48 24 03 CB 89 55 E8 89 4D F0 33 C9 89 4D FC 39 48 18 0F 86 }
		$hex6 = { C7 45 BC 47 65 74 50 C7 45 C0 72 6F 63 41 C7 45 C4 64 64 72 65 66 C7 45 C8 73 73 8B 0C 82 8D 55 BC 03 CB E8 [4] 8B 4D FC 85 C0 }
		$hex7 = { 8B 5D E0 8D 45 BC 6A 08 6A 00 50 89 9F 98 10 00 00 89 B7 A8 10 00 00 C7 45 BC 4B 65 72 6E C7 45 C0 65 6C 33 32 C7 45 C4 2E 64 6C 6C C6 45 C8 00 FF D3 89 45 FC 85 C0 }
		$hex8 = { 6A 10 59 8D (45 C0 | 44 24 ??) C6 00 00 40 49 75 ?? 0F B7 D6 8D (4D C0 | 4C 24 ??) C1 E2 06 03 (55 D8 | 54 24 ??) 57 }
		$hex9 = { 8B (45 FC | 44 24 ??) 8B (55 F8 | 54 24 ??) 2B C1 03 D1 89 (45 FC | 44 24 ??) 89 (55 F8 | 54 24 ??) 85 C0 7F ?? 83 (7D 0C 00 | 7C 24 ?? 00) 74 ?? 8D (45 08 | 44 24 ??) 50 56 51 FF (75 0C | 74 24 ??) 8B CB 6A 07 5A E8 [4] EB }
		$hex10 =  { 8B D0 3B FA 0F 4C C7 33 DB 89 (45 F8 | 44 24 ??) 85 C0 7E ?? 8B (45 FC | 44 24 ??) 2B C6 89 (45 FC | 44 24 ??) 0F B7 0C 30 0F B7 06 2B C8 78 }
	
	condition:
		pe.characteristics & pe.DLL
		and (filesize >= 15KB and filesize <=100KB)
		and any of them
}

rule bangkokshell_imobiledevice_dll
{
	meta:
		version = "1.0"
		first_imported = "2023-06-15"
		last_modified = "2023-06-15"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect imobiledevice.dll, which is the loaded module for the main PE used in this operation. This file, by itself, is not malicious but is also not a benign file. It should be considered an indicator of an attack if it has been discovered in the environment."
		hash = "cb0a22c4ee2610692c4ec4aee1c9693829bb82aebe2a260e0a100f354e5ea1e0 "
	
	strings: 
		$dll_name = "imobiledevice.dll"
		$exp_func1 = "afc_client_free"
		$exp_func2 = "debugserver_decode_string"
		$exp_func3 = "idevice_disconnect"
		$exp_func4 = "lockdownd_activate"
		$exp_func5 = "mobilesync_anchors_new"
	
	condition:
		pe.is_dll()
		and filesize < 100KB
		and pe.imphash() == "fd3a5d0640b4ad18cc4154ffa40d7b34"
		and pe.number_of_signatures == 0
		and ($dll_name and 2 of ($exp_func*))
}
