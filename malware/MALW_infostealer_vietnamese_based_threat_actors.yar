rule stage1_batch
{
	meta:
		version = "1.0"
		first_imported = "2023-08-01"
		last_modified = "2023-08-01"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the batch file used in the first stage of the attack. This batch file will be employed to download the stage two batch file from the C2 server."
		hash = "fe3f71cfdffdadcd2268cc3ddb66eed76ff0f0477164ee808c90c2d9768733f2"
		
	strings:
		$url1 = "sealingshop.click" nocase
		$url2 = "/bat/lapbun" nocase
		$cmd1 = "cmd /c curl" nocase
		$cmd2 = "cmd /c c:" nocase
		
	condition:
		uint32(0) == 0xA0DFEFF
		and 3 of them
}

rule stage2_batch
{
	meta:
		version = "1.0"
		first_imported = "2023-08-01"
		last_modified = "2023-08-01"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the batch file used in the secondary stage of the attack. This batch file will be used to download and place the persistence file in the startup folder, download Python binary files, and fetch the stage three Python script file from the C2 server for execution."
		hash = "9bb86b277a49fc118ad3537308d9f66e4afcf7c5a34784ba7ece6e29a52c1a32"
		
	strings:
		$url1 = "sealingshop.click" nocase
		$url2 = "/config/stu" nocase
		$url3 = "/py/lapbun" nocase
		$startup = "Microsoft\\\\Windows\\\\'Start Menu'\\\\Programs\\\\Startup\\\\" nocase
		$python1 = "python39.zip" nocase
		$python2 = "python39\\\\python.exe" nocase

	condition:
		all of them
}

rule stage3_python
{
	meta:
		version = "1.0"
		first_imported = "2023-08-01"
		last_modified = "2023-08-01"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the Python script used in the third stage of the attack. This Python script will be employed to download and execute the fourth stage payload file."
		hash = "56cca76afbf69c38104bbb69c58b57a6f6e1ad58a9868252bd302d4b67deaee8"
		
	strings:
		$import1 = "import requests"
		$import2 = "import os "
		$import3 = "import threading"
		$import4 = "import win32crypt "
		$import5 = "from Crypto.Cipher"
		$import6 = "import getpass "
		$import7 = "import sys "
		$import8 = "import json"
		$import9 = "import sqlite3"
		$b64_1 = "requests.get('https://" base64
		$b64_2 = "sealingshop.click" base64
		$b64_3 = "/pyen/lapbun" base64
	
	condition:
		all of ($import*)
		and 2 of ($b64*)
}

rule stage4_python_payload
{
	meta:
		version = "1.0"
		first_imported = "2023-08-01"
		last_modified = "2023-08-01"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the Python script used in the fourth stage of the attack. This script represents the final payload of the infection chain and is responsible for stealing the saved usernames and passwords from the web browser and exfiltrating them to the C2 server."
		hash = "40322a938f8dffe2b72b7c52c9f1c86219fb071c23b2c37fc14423278ba8ac24"
		
	strings:
		$url1 = "requests.get(\"https://" base64
		$url2 = "sealingshop.click/" base64
		$url3 = "config/all" base64
		$url4 = "/host/lapbun" base64
		$url5 = "geolocation-db.com/json" base64
		$url6 = "https://www.facebook.com" base64
		$str1 = "taskkill /f /im chrome.exe" base64
		$str2 = "requests.get(u).text.replace(\"\\n\",\"\").replace(\" \",\"\")+\"" base64
		$str3 = "threading.Thread(target=self." base64
		$str4 = "if p.json()['country_code'] != 'VN':" base64
		
	condition:
		4 of ($url*)
		and all of ($str*)
}

rule persistence_bat
{
	meta:
		version = "1.0"
		first_imported = "2023-08-01"
		last_modified = "2023-08-01"
		status = "RELEASED"
		sharing = "TLP:CLEAR"
		source = "Manual investigate"
		author = "TTC-CERT"
		description = "Detect the batch file used for the persistence mechanism. This file is located in the Startup folder."
		hash = "8e2cbf6771be53aa0a4b46f7eb35f47ce5c1db1a319773668f06b8f7f006820a"
		
	strings:
		$exec1 = "cmd /c C:" nocase
		$exec2 = "\\powershell.exe" nocase
		$python1 = "\\\\python39\\\\python" nocase
		$python2 = /\\\\python\d{1,2}\\\\\w+\.py/i
		$startup = "Microsoft\\\\Windows\\\\'Start Menu'\\\\Programs\\\\Startup\\\\" nocase
	
	condition:
		1 of ($exec*)
		and all of ($python*)
		and not $startup
}